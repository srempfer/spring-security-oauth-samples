###
# @no-redirect
GET http://localhost:8082/oauth/authorize?
        response_type=code
        &client_id=public-client
        &redirect_uri=http://localhost:9092/dummy-client
        &scope=SCOPE_TEST
        &state=sdf7s990s

> {%
    client.test("Should fail without code challenge parameter", function() {
        client.assert(response.status === 400, "Wrong response status");
        client.assert(response.body.indexOf("invalid_request") !== -1, 'Wrong content');
        client.assert(response.body.indexOf("Code challenge required.") !== -1, 'Wrong content');
    });
 %}

###
POST http://localhost:8082/oauth/token?
        grant_type=authorization_code
        &code={{authorization_code}}
        &redirect_uri=http://localhost:9092/dummy-client
Authorization: Basic public-client ''

> {%
    client.test("Should fail without verifier", function() {
        client.assert(response.status === 400, "Wrong response status");
        client.assert(response.body.error == "invalid_request", 'Wrong content');
        client.assert(response.body.error_description == "Code verifier required.", 'Wrong content');
    });
 %}

###
POST http://localhost:8082/oauth/token?
        grant_type=authorization_code
        &client_id=public-client
        &code={{authorization_code}}
        &redirect_uri=http://localhost:9092/dummy-client

> {%
    client.test("Should fail without verifier", function() {
        client.assert(response.status === 400, "Wrong response status");
        client.assert(response.body.error == "invalid_request", 'Wrong content');
        client.assert(response.body.error_description == "Code verifier required.", 'Wrong content');
    });
 %}
